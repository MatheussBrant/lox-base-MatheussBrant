?start     : program

program    : stmt*

?stmt      : expr ";"
           | print_cmd
           // | if_cmd
           // | for_cmd
           // | ...

print_cmd  : "print" expr ";"

// EXPRESSÃ•ES
?expr      : assignment

?assignment: atom "." VAR "=" assignment   -> setattr
           | VAR "=" assignment            -> assign
           | logic_or

?logic_or  : logic_and
           | logic_or "or" logic_and       -> or_

?logic_and : equality
           | logic_and "and" equality      -> and_

?equality  : comparison
           | equality "==" comparison      -> eq
           | equality "!=" comparison      -> ne

?comparison: term
           | comparison ">" term           -> gt
           | comparison "<" term           -> lt
           | comparison ">=" term          -> ge
           | comparison "<=" term          -> le

?term      : factor
           | term "+" factor               -> add
           | term "-" factor               -> sub

?factor    : unary
           | factor "*" unary              -> mul
           | factor "/" unary              -> div

?unary     : "!" unary                     -> not_
           | "-" unary                     -> neg
           | atom

?atom      : atom "(" params ")"           -> call
           | atom "." VAR                  -> getattr
           | NUMBER 
           | BOOL
           | VAR
           | STRING
           | NIL
           | "(" expr ")"

params     : [ expr ("," expr )* ]

BOOL.2     : "true" | "false"
VAR.1      : /[a-z_]\w*/
NUMBER     : /([1-9][0-9]*|0)(\.[0-9]+)?/
STRING     : /"[^"]*"/
NIL.2      : "nil"
COMMENT    : "//" /[^\n]*/

%ignore /\s/ | COMMENT
